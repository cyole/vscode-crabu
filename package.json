{
  "publisher": "cyole",
  "name": "crabu",
  "displayName": "Crabu",
  "version": "0.0.3",
  "private": true,
  "packageManager": "pnpm@10.13.1",
  "description": "A vscode extension for Crabu.",
  "author": "Cyole <i@cyole.me>",
  "license": "MIT",
  "funding": "https://github.com/sponsors/cyole",
  "homepage": "https://github.com/cyole/vscode-crabu#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/cyole/vscode-crabu"
  },
  "bugs": {
    "url": "https://github.com/cyole/vscode-crabu/issues"
  },
  "sponsor": {
    "url": "https://github.com/sponsors/cyole"
  },
  "categories": [
    "Other"
  ],
  "main": "./dist/index.js",
  "icon": "resources/icon.png",
  "files": [
    "LICENSE.md",
    "dist/**/*",
    "resources/*"
  ],
  "engines": {
    "vscode": "^1.99.3"
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "contributes": {
    "commands": [
      {
        "command": "crabu.refreshApiTreeView",
        "title": "Refresh API Tree View",
        "icon": "$(refresh)",
        "category": "Crabu"
      },
      {
        "command": "crabu.refreshMockTreeView",
        "title": "Refresh Mock Tree View",
        "icon": "$(refresh)",
        "category": "Crabu"
      },
      {
        "command": "crabu.searchApi",
        "title": "Search API",
        "icon": "$(search)",
        "category": "Crabu"
      },
      {
        "command": "crabu.searchApiGroup",
        "title": "Search API Group",
        "icon": {
          "light": "resources/search-locate.svg",
          "dark": "resources/search-locate-dark.svg"
        },
        "category": "Crabu"
      },
      {
        "command": "crabu.showCrabuWebview",
        "title": "Show Crabu Webview",
        "icon": "$(home)",
        "category": "Crabu"
      },
      {
        "command": "crabu.getApiTreeDataUpdateTime",
        "title": "Get API Tree Data Update Time",
        "icon": "$(clock)",
        "category": "Crabu"
      },
      {
        "command": "crabu.switchMockStatus",
        "title": "Switch Mock Status",
        "category": "Crabu"
      },
      {
        "command": "crabu.addApiToMock",
        "title": "Add API to Mock",
        "icon": "$(plus)",
        "enablement": "view == apiTreeView && viewItem == apiItem"
      },
      {
        "command": "crabu.addApiToMockByUrl",
        "title": "Add API to Mock by Yapi Url",
        "icon": "$(plus)",
        "category": "Crabu"
      },
      {
        "command": "crabu.addApiGroupToMock",
        "title": "Add API Group to Mock",
        "icon": "$(plus)",
        "enablement": "view == apiTreeView && viewItem == apiGroup"
      },
      {
        "command": "crabu.removeFromMock",
        "title": "Remove API from Mock",
        "icon": "$(notebook-delete-cell)",
        "enablement": "view == mockTreeView && (viewItem == mockNode || viewItem == mockItem)"
      },
      {
        "command": "crabu.showCrabuWebviewWithMock",
        "title": "Show Crabu Webview with Mock",
        "icon": "$(globe)",
        "enablement": "view == mockTreeView && (viewItem == mockNode || viewItem == mockItem)"
      },
      {
        "command": "crabu.updateMockToLatestVersion",
        "title": "Update Mock to Latest Version",
        "icon": "$(refresh)",
        "enablement": "view == mockTreeView && viewItem == mockItem"
      },
      {
        "command": "crabu.genRequestCode",
        "title": "Generate Request Code",
        "icon": "$(code)",
        "enablement": "viewItem == apiItem || viewItem == mockItem"
      },
      {
        "command": "crabu.genTypeScriptTypes",
        "title": "Generate TypeScript Types",
        "icon": "$(file-code)",
        "enablement": "viewItem == apiItem || viewItem == mockItem"
      },
      {
        "command": "crabu.compareWithLatestVersion",
        "title": "Compare with Latest Version",
        "icon": "$(diff)",
        "enablement": "view == mockTreeView && viewItem == mockItem"
      }
    ],
    "configuration": {
      "type": "object",
      "properties": {
        "crabu.yapiBaseUrl": {
          "type": "string",
          "default": "",
          "description": "yapi文档的baseUrl"
        },
        "crabu.yapiProjects": {
          "type": "array",
          "default": [],
          "description": "yapi项目列表",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "项目id"
              },
              "name": {
                "type": "string",
                "description": "项目名称"
              },
              "token": {
                "type": "string",
                "description": "访问项目的api token"
              }
            }
          }
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "crabu",
          "title": "Crabu",
          "icon": "resources/api.svg"
        }
      ]
    },
    "views": {
      "crabu": [
        {
          "id": "mockTreeView",
          "name": "Mocking",
          "icon": "resources/api.svg"
        },
        {
          "id": "apiTreeView",
          "name": "API",
          "icon": "resources/api.svg"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "apiTreeView",
        "contents": "请先在设置中配置项目列表\n [打开设置](command:workbench.action.openSettings?%5B%22crabu.yapiProjects%22%5D)"
      },
      {
        "view": "mockTreeView",
        "contents": "请在Crabu中添加需要mock的接口\n [打开Crabu](command:crabu.showCrabuWebview)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "crabu.searchApi",
          "when": "view == apiTreeView",
          "group": "navigation"
        },
        {
          "command": "crabu.searchApiGroup",
          "when": "view == apiTreeView",
          "group": "navigation"
        },
        {
          "command": "crabu.refreshApiTreeView",
          "when": "view == apiTreeView",
          "group": "navigation"
        },
        {
          "command": "crabu.showCrabuWebview",
          "when": "view == mockTreeView",
          "group": "navigation"
        },
        {
          "command": "crabu.getApiTreeDataUpdateTime",
          "when": "view == apiTreeView",
          "group": "navigation"
        },
        {
          "command": "crabu.refreshMockTreeView",
          "when": "view == mockTreeView",
          "group": "navigation"
        },
        {
          "command": "crabu.addApiToMockByUrl",
          "when": "view == mockTreeView",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "crabu.addApiToMock",
          "when": "viewItem == apiItem",
          "group": "inline"
        },
        {
          "command": "crabu.addApiGroupToMock",
          "when": "viewItem == apiGroup",
          "group": "inline"
        },
        {
          "command": "crabu.genRequestCode",
          "when": "viewItem == apiItem || viewItem == mockItem",
          "group": "inline"
        },
        {
          "command": "crabu.genTypeScriptTypes",
          "when": "viewItem == apiItem || viewItem == mockItem",
          "group": "inline"
        },
        {
          "command": "crabu.removeFromMock",
          "when": "view == mockTreeView && (viewItem == mockNode || viewItem == mockItem)",
          "group": "context"
        },
        {
          "command": "crabu.updateMockToLatestVersion",
          "when": "view == mockTreeView && viewItem == mockItem",
          "group": "context"
        },
        {
          "command": "crabu.compareWithLatestVersion",
          "when": "view == mockTreeView && viewItem == mockItem",
          "group": "context"
        },
        {
          "command": "crabu.showCrabuWebviewWithMock",
          "when": "view == mockTreeView && (viewItem == mockNode || viewItem == mockItem)",
          "group": "inline"
        }
      ]
    }
  },
  "scripts": {
    "build": "tsdown src/index.ts --external vscode",
    "dev": "nr build --watch --sourcemap",
    "prepare": "nr update",
    "update": "vscode-ext-gen --output src/generated/meta.ts",
    "lint": "eslint .",
    "vscode:prepublish": "nr build",
    "publish": "vsce publish --no-dependencies",
    "pack": "vsce package --no-dependencies",
    "typecheck": "tsc --noEmit",
    "release": "bumpp && nr publish"
  },
  "devDependencies": {
    "@antfu/eslint-config": "catalog:dev",
    "@antfu/ni": "catalog:dev",
    "@tomjs/vscode-extension-webview": "catalog:build",
    "@types/node": "catalog:types",
    "@types/vscode": "^1.99.3",
    "@vscode/vsce": "catalog:dev",
    "bumpp": "catalog:dev",
    "eslint": "catalog:dev",
    "esno": "catalog:dev",
    "pnpm": "catalog:dev",
    "reactive-vscode": "catalog:dev",
    "tsdown": "catalog:build",
    "typescript": "catalog:dev",
    "vite": "catalog:build",
    "vscode-ext-gen": "catalog:dev"
  }
}
